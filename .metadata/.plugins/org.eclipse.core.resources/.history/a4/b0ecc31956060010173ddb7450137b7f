package com.menu.controller;



import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.sql.DataSource;
import com.google.gson.Gson;
import com.menu.bean.MenuBean;
import com.menu.model.movietheaterDao;

import jakarta.annotation.Resource;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@WebServlet("/GetMenuItems") // ✅ API 路徑不變
public class GetMenuItemsServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
    private movietheaterDao menuDAO;

    @Resource(name = "jdbc/project2") // ✅ 確保這個名稱對應你的 DataSource
    private DataSource dataSource;
    
    @Override
    public void init() throws ServletException {
        try {
            menuDAO = new movietheaterDao();  // ✅ 初始化 DAO，連接 SQL Server
        } catch (Exception e) {
            throw new ServletException("❌ 無法連接資料庫", e);
        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        PrintWriter out = response.getWriter();

        String menuName = request.getParameter("menu_name");


        if (menuName != null) {
            menuName = new String(menuName.getBytes("ISO-8859-1"), "UTF-8"); // 轉 UTF-8
            System.out.println("🔍 查詢 menu_name: " + menuName); // ✅ 檢查是否收到正確名稱
        }

        try {
            Gson gson = new Gson();
            MenuBean menu = menuDAO.getMenuByName(menuName);

            if (menu != null) {
                out.print(gson.toJson(menu));
            } else {
                response.setStatus(HttpServletResponse.SC_NOT_FOUND);
                out.print("{\"error\": \"❌ 找不到商品: " + menuName + "\"}");
            }
            out.flush();
        } catch (Exception e) {
            e.printStackTrace();
            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            out.print("{\"error\": \"❌ 伺服器錯誤，請稍後再試！\"}");
        }
    }
}